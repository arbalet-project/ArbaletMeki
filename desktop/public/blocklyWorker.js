importScripts('charMap.js');

let nbRows;
let nbColumns;
let gridState = [];

onmessage = function(e){

    if(e.data.message === 'gridLength'){
        nbRows = e.data.nbRows;
        nbColumns = e.data.nbColumns;
        for(let i = 0; i < nbRows; i++){
            gridState[i] = [];
        }
    }
    else if (e.data.message === 'blocklyScript'){
        try{
            eval(e.data.script);
        }
        catch(error){
            console.error(error);
        }
        finally{
            self.postMessage({message:"close"});
            close();
        }
    }
}

// Functions used by the Javascript code generated by Blockly
function setPixel(rowX,columnY,color){
    if((rowX >= 0 && rowX < nbRows ) && (columnY >= 0 && columnY < nbColumns)){
        self.postMessage({rowX: rowX, columnY: columnY, color:color});
        gridState[rowX][columnY] = color;
    }
}

function switchOffPixel(rowX,columnY){
    setPixel(rowX,columnY,'#000000');
}

function switchOffAllPixels(){
    for(let i = 0; i < nbRows; i++){
        for(let j = 0; j < nbColumns; j++){
            switchOffPixel(i,j);
        }
    }
}

function setAllPixels(color){
    for(let i = 0; i < nbRows; i++){
        for(let j = 0; j < nbColumns; j++){
            setPixel(i,j,color);
        }
    }
}

function getPixelColor(row,column){
    return gridState[row][column];
}

function drawLetter(inputLetter,rowX,columnY,color){
    let letter = inputLetter.charAt(0);
    if(charMap.has(letter)){
        let letterPixels = charMap.get(letter);
        for(let i = 0; i < letterPixels.length; i = i +2){
            setPixel(rowX+letterPixels[i],columnY+letterPixels[i+1],color);
        }

    }
}

function sleep(time,unit) {
    if(unit === 's'){
        time = time * 1000;
    }
    var start = new Date().getTime();
    for (var i = 0; i < 1e7; i++) {
      if ((new Date().getTime() - start) > time){
        break;
      }
    }
  }



